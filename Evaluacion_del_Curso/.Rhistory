assign("cars", openintro::cars, envir=globalenv())
assign("mpg.midsize", cars[cars$type=="midsize","mpgCity"], envir=globalenv())
# Creando el conjunto de datos 'autos' a partir de 'cars'
autos <- openintro::cars
# Renombrando nombres de las variables
colnames(autos) <- c("tipo", "precio", "mpgCiudad", "trenManejo", "pasajeros", "peso")
# Renombrando los niveles de 'tipo'
levels(autos$tipo)[levels(autos$tipo)=="large"] <- "grande"
levels(autos$tipo)[levels(autos$tipo)=="small"] <- "chico"
levels(autos$tipo)[levels(autos$tipo)=="midsize"] <- "mediano"
# Renombrando los niveles de 'trenManejo'
levels(autos$trenManejo)[levels(autos$trenManejo)=="4WD"] <- "4x4"
levels(autos$trenManejo)[levels(autos$trenManejo)=="front"] <- "frontal"
levels(autos$trenManejo)[levels(autos$trenManejo)=="rear"] <- "trasero"
# Renombrando 'mpg.midsize'
mpg.mediano <- mpg.midsize
# Creando funciones en español
rango <- function(x, ...){range(x, ...)}
dest <- function(x, ...){sd(x, ...)}
RIC <- function(x, ...){IQR(x, ...)}
media <- function(x, ...){mean(x, ...)}
mediana <- function(x, ...){median(x, ...)}
tabla <- function(...){table(...)}
niveles <- function(x){levels(x)}
resumen <- function(x, ...){
media.x <- mean(x, na.rm = TRUE)
mediana.x <- median(x, na.rm = TRUE)
q1.x <- quantile(x, probs = 0.33, na.rm = TRUE)
q3.x <- quantile(x, probs = 0.66, na.rm = TRUE)
min.x <- min(x, na.rm = TRUE)
max.x <- max(x, na.rm = TRUE)
matrix(round(c(min.x, q1.x, mediana.x, media.x, q3.x, max.x), 1),
nrow = 6, ncol = 1,
dimnames = list(c("Minimo", "1er. cuartil",
"Mediana", "Media", "3er. cuartil", "Maximo"),
c("Valores")
)
)
}
View(autos)
resumen(autos$pasajeros)
resumen(autos$peso)
RIC(autos$peso)
3494.9-2581.8
rango(autos$peso)
4105-1695
hist(rbeta(10000,5,5))
?rbeta
hist(rbeta(10000,2,5), main = "", xlab = "", ylab = "Frecuencia")
hist(rbeta(10000,1,5), main = "", xlab = "", ylab = "Frecuencia")
hist(rbeta(10000,2,5), main = "", xlab = "", ylab = "Frecuencia")
hist(rbeta(10000,2,10), main = "", xlab = "", ylab = "Frecuencia")
hist(rbeta(10000,5,1), main = "", xlab = "", ylab = "Frecuencia")
hist(rbeta(10000,5,10), main = "", xlab = "", ylab = "Frecuencia")
hist(rbeta(10000,20,10), main = "", xlab = "", ylab = "Frecuencia")
hist(rbeta(10000,20,5), main = "", xlab = "", ylab = "Frecuencia")
hist(rbeta(10000,20,1), main = "", xlab = "", ylab = "Frecuencia")
hist(rbeta(10000,5,1), main = "", xlab = "", ylab = "Frecuencia")
assign("cars", openintro::cars, envir=globalenv())
assign("mpg.midsize", cars[cars$type=="midsize","mpgCity"], envir=globalenv())
# Creando el conjunto de datos 'autos' a partir de 'cars'
autos <- openintro::cars
# Renombrando nombres de las variables
colnames(autos) <- c("tipo", "precio", "mpgCiudad", "trenManejo", "pasajeros", "peso")
# Renombrando los niveles de 'tipo'
levels(autos$tipo)[levels(autos$tipo)=="large"] <- "grande"
levels(autos$tipo)[levels(autos$tipo)=="small"] <- "chico"
levels(autos$tipo)[levels(autos$tipo)=="midsize"] <- "mediano"
# Renombrando los niveles de 'trenManejo'
levels(autos$trenManejo)[levels(autos$trenManejo)=="4WD"] <- "4x4"
levels(autos$trenManejo)[levels(autos$trenManejo)=="front"] <- "frontal"
levels(autos$trenManejo)[levels(autos$trenManejo)=="rear"] <- "trasero"
# Renombrando 'mpg.midsize'
mpg.mediano <- mpg.midsize
# Creando funciones en español
rango <- function(x, ...){range(x, ...)}
dest <- function(x, ...){sd(x, ...)}
RIC <- function(x, ...){IQR(x, ...)}
media <- function(x, ...){mean(x, ...)}
mediana <- function(x, ...){median(x, ...)}
tabla <- function(...){table(...)}
niveles <- function(x){levels(x)}
resumen <- function(x, ...){
media.x <- mean(x, na.rm = TRUE)
mediana.x <- median(x, na.rm = TRUE)
q1.x <- quantile(x, probs = 0.33, na.rm = TRUE)
q3.x <- quantile(x, probs = 0.66, na.rm = TRUE)
min.x <- min(x, na.rm = TRUE)
max.x <- max(x, na.rm = TRUE)
matrix(round(c(min.x, q1.x, mediana.x, media.x, q3.x, max.x), 1),
nrow = 6, ncol = 1,
dimnames = list(c("Minimo", "1er. cuartil",
"Mediana", "Media", "3er. cuartil", "Maximo"),
c("Valores")
)
)
}
boxplot(peso ~ trenManejo, data = autos)
boxplot(peso ~ trenManejo, data = autos, xlab = "Tren de manejo", ylab = "Peso (en libras)")
?dotplot
plot(autos$pasajeros, rep(1, nrow(autos)),
ylab = "", yaxt = "n", xlab = "Precio ($1000s)", xlim = c(5,65))
plot(autos$peso, rep(1, nrow(autos)),
ylab = "", yaxt = "n", xlab = "Precio ($1000s)", xlim = c(5,65))
plot(autos$peso, rep(1, nrow(autos)),
ylab = "", yaxt = "n", xlab = "Precio ($1000s)", xlim = c(5,65))
plot(autos$peso, rep(1, nrow(autos)),
ylab = "", yaxt = "n", xlab = "Precio ($1000s)")
plot(autos$peso, rep(1, nrow(autos)), ylab = "", yaxt = "n", xlab = "Peso (en libras)")
plot(autos$peso, rep(2, nrow(autos)), ylab = "", yaxt = "n", xlab = "Peso (en libras)")
plot(autos$peso, rep(5, nrow(autos)), ylab = "", yaxt = "n", xlab = "Peso (en libras)")
plot(autos$peso, rep(1, nrow(autos)), ylab = "", yaxt = "n", xlab = "Peso (en libras)")
barplot(table(autos$pasajeros))
barplot(table(autos$pasajeros), xlab = "No. Pasajeros")
barplot(table(autos$pasajeros), xlab = "No. Pasajeros", ylab = "Frecuencia")
assign("cars", openintro::cars, envir=globalenv())
assign("mpg.midsize", cars[cars$type=="midsize","mpgCity"], envir=globalenv())
# Creando el conjunto de datos 'autos' a partir de 'cars'
autos <- openintro::cars
# Renombrando nombres de las variables
colnames(autos) <- c("tipo", "precio", "mpgCiudad", "trenManejo", "pasajeros", "peso")
# Renombrando los niveles de 'tipo'
levels(autos$tipo)[levels(autos$tipo)=="large"] <- "grande"
levels(autos$tipo)[levels(autos$tipo)=="small"] <- "chico"
levels(autos$tipo)[levels(autos$tipo)=="midsize"] <- "mediano"
# Renombrando los niveles de 'trenManejo'
levels(autos$trenManejo)[levels(autos$trenManejo)=="4WD"] <- "4x4"
levels(autos$trenManejo)[levels(autos$trenManejo)=="front"] <- "frontal"
levels(autos$trenManejo)[levels(autos$trenManejo)=="rear"] <- "trasero"
# Renombrando 'mpg.midsize'
mpg.mediano <- mpg.midsize
# Creando funciones en español
rango <- function(x, ...){range(x, ...)}
dest <- function(x, ...){sd(x, ...)}
RIC <- function(x, ...){IQR(x, ...)}
media <- function(x, ...){mean(x, ...)}
mediana <- function(x, ...){median(x, ...)}
tabla <- function(...){table(...)}
niveles <- function(x){levels(x)}
resumen <- function(x, ...){
media.x <- mean(x, na.rm = TRUE)
mediana.x <- median(x, na.rm = TRUE)
q1.x <- quantile(x, probs = 0.33, na.rm = TRUE)
q3.x <- quantile(x, probs = 0.66, na.rm = TRUE)
min.x <- min(x, na.rm = TRUE)
max.x <- max(x, na.rm = TRUE)
matrix(round(c(min.x, q1.x, mediana.x, media.x, q3.x, max.x), 1),
nrow = 6, ncol = 1,
dimnames = list(c("Minimo", "1er. cuartil",
"Mediana", "Media", "3er. cuartil", "Maximo"),
c("Valores")
)
)
}
View(autos)
dest(autos$peso)
dest(autos$precio)
media(autos$precio)
media(autos$peso)
hist(rbeta(10000,2,10), main = "", xlab = "", ylab = "Frecuencia")
hist(rbeta(10000,5,5), main = "", xlab = "", ylab = "Frecuencia")
hist(rbeta(10000,5,1), main = "", xlab = "", ylab = "Frecuencia")
plot(autos$peso, rep(1, nrow(autos)), ylab = "", yaxt = "n", xlab = "Peso (en libras)")
boxplot(peso ~ trenManejo, data = autos, xlab = "Tren de manejo", ylab = "Peso (en libras)")
barplot(table(autos$pasajeros), xlab = "No. Pasajeros", ylab = "Frecuencia")
swirlify::testit()
swirlify::testit()
swirlify::testit()
swirlify::testit()
swirlify::testit()
swirlify::testit()
swirlify::testit()
swirlify::testit()
swirlify::testit()
swirlify::testit()
media(autos$peso)
resumen(autos$peso)
4105-1695
dest(autos$peso)
swirlify::testit()
median(peso)
media(peso$autos)
media(autps$peso)
media(autos$peso)
resumen(autos$peso)
4105-1695
dest(autos$peso)
3500
10
