assign("cars", openintro::cars, envir=globalenv())
assign("mpg.midsize", cars[cars$type=="midsize","mpgCity"], envir=globalenv())
# Creando el conjunto de datos 'autos' a partir de 'cars'
autos <- openintro::cars
# Renombrando nombres de las variables
colnames(autos) <- c("tipo", "precio", "mpgCiudad", "trenManejo", "pasajeros", "peso")
# Renombrando los niveles de 'tipo'
levels(autos$tipo)[levels(autos$tipo)=="large"] <- "grande"
levels(autos$tipo)[levels(autos$tipo)=="small"] <- "chico"
levels(autos$tipo)[levels(autos$tipo)=="midsize"] <- "mediano"
# Renombrando los niveles de 'trenManejo'
levels(autos$trenManejo)[levels(autos$trenManejo)=="4WD"] <- "4x4"
levels(autos$trenManejo)[levels(autos$trenManejo)=="front"] <- "frontal"
levels(autos$trenManejo)[levels(autos$trenManejo)=="rear"] <- "trasero"
# Renombrando 'mpg.midsize'
mpg.mediano <- mpg.midsize
str(autos)
table(autos$mpgCiudad)
media <- function(x, ...){mean(x, ...)}
mediana <- function(x, ...){median(x, ...)}
moda <- function(x, ...){mode(x, ...)}
media(autos$mpgCiudad)
mediana(autos$mpgCiudad)
moda(autos$mpgCiudad)
?mode
tabla <- function(x, ...){table(x, ...)}
tabla(autos$mpgCiudad)
?table
tabla <- function(...){table(x, ...)}
tabla <- function(...){table(...)}
tabla(autos$mpgCiudad)
swirlify::testit()
swirlify::testit()
swirlify::testit()
swirlify::testit()
nxt()
nxt()
swirlify::testit()
autos
autos$mpgCiudad
miMPG <- autos$mpgCiudad
media(miPMG)
media(miMPG)
mediana(miMPG)
tabla(miMPG)
19
